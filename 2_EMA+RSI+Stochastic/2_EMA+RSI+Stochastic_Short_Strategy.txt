// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© krosenfeld7

//@version=4
strategy("2 EMAs + RSI + Stochastic Short Strategy", overlay = true, pyramiding = 0, 
         margin_long = 100, margin_short = 100, 
         default_qty_type = strategy.percent_of_equity, 
         default_qty_value = 20, initial_capital = 2000, 
         process_orders_on_close = true)

// Set the starting point for backtesting
start = input(title = "Backtesting Start", type = input.time,
     defval = timestamp("1 Jan 2015"))
maxTimeOpen = input(title = "Order Expiration", type = input.integer,
     defval = 100, minval = 1)
tpSlStrategy = input(title = "Take Profit Strategy", type = input.string,
     defval = "Percent", options = ["Percent", "ATR"])
trailingStop = input(title = "Trailing Stop", type = input.string,
     defval = "Fixed", options = ["Fixed", "Trail"])

// ATR For Stop Loss
atrLength = input(title = "ATR SL Length", defval = 14,
     minval = 1)
atrMultiplier = input(title = "ATR Multiplier", type = input.float, 
     defval = 1, minval = 0.1)
riskLevel = input(title = "Risk Level", type = input.float, 
     defval = 1, minval = 0.1)

shortProfitPercent = input(title = "Take Profit %",
     type = input.float, minval = 0.0, step = 0.1, defval = 10) / 100
shortLossPercent = input(title = "Stop Loss %",
     type = input.float, minval = 0.0, step = 0.1, defval = 10) / 100

// Algorithm / Strategy Goes here
// Set short variables to execute positions below
ema50  = ema(close, 50)
ema200 = ema(close, 200)

emaLong  = ema50 > ema200 and close > ema50
emaShort = ema50 < ema200 and close < ema50

k = sma(stoch(close, high, low, 14), 3)
d = sma(k, 3)

stoLong  = crossover(k, d)
stoShort = crossover(d, k)

up = rma(max(change(close), 0), 14)
down = rma(-min(change(close), 0), 14)
rsi = down == 0 ? 100 : up == 0 ? 0 : 100 - (100 / (1 + up / down))

rsiLong  = rsi < 50
rsiShort = rsi > 50

long  = emaLong  and stoLong  and rsiLong
short = emaShort and stoShort and rsiShort


// End Algorithm

shortExitPrice = 0.0
shortStopPrice = 0.0

shortExitPercentPrice = strategy.position_avg_price * (1 - 
     (shortProfitPercent * riskLevel))
shortStopPercentPrice = strategy.position_avg_price * (1 + 
     shortLossPercent)

// Profit & Loss via ATR
atr = atr(atrLength)

atr := valuewhen(strategy.position_size == 0, atr, 0)

shortExitAtrPrice = strategy.position_avg_price - (atr * 
     atrMultiplier * riskLevel)
shortStopAtrPrice = strategy.position_avg_price + (atr * 
     atrMultiplier)

if tpSlStrategy == "Percent"
    shortExitPrice := shortExitPercentPrice
    
    if trailingStop == "Fixed"
        shortStopPrice := shortStopPercentPrice
    else if trailingStop == "Trail"
        stopValue      = close * (1 + shortLossPercent)
        shortStopPrice := (strategy.position_size < 0) ? 
             min(stopValue, shortStopPrice[1]) : 999999

else if tpSlStrategy == "ATR"
    if strategy.position_size < 0
        shortExitPrice := shortExitAtrPrice
        
    if trailingStop == "Fixed"
        shortStopPrice := shortStopAtrPrice
    else if trailingStop == "Trail"
        stopValue      = close + (atr * atrMultiplier)
        shortStopPrice := (strategy.position_size < 0) ? 
             min(stopValue, shortStopPrice[1]) : 999999

// Plotting profit / loss targets
plot(series = (strategy.position_size < 0) ? shortExitPrice : na, 
     color = color.green, style = plot.style_linebr, linewidth = 3, 
     title = "Short Target")
plot(series = (strategy.position_size < 0) ? shortStopPrice : na, 
     color = color.red, style = plot.style_linebr, linewidth = 3, 
     title = "Short Stop Loss")

// Submit entry orders
if time >= start
    strategy.entry(id = "Short", long = strategy.short, 
         comment = "Short Open", when = short)

// Submit exit orders
strategy.exit(id = "Short", limit = shortExitPrice, stop = shortStopPrice, 
     comment = "Short Close", when = strategy.position_size < 0)
strategy.close(id = "Short", comment = "Expired: >" + tostring(maxTimeOpen), 
     when = (barssince(change(strategy.opentrades)) + 1) >= maxTimeOpen)
